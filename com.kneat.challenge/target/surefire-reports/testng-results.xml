<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="com.kneat.test.Tests" duration-ms="121448" started-at="2020-02-20T17:58:12Z" finished-at="2020-02-20T18:00:13Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="121448" started-at="2020-02-20T17:58:12Z" finished-at="2020-02-20T18:00:13Z">
      <class name="com.kneat.test.Tests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="setUp" is-config="true" duration-ms="9142" started-at="2020-02-20T17:58:12Z" finished-at="2020-02-20T17:58:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="SaunaLimerickStrandHotelListed()[pri:1, instance:com.kneat.test.Tests@6bf256fa]" name="SaunaLimerickStrandHotelListed" duration-ms="26774" started-at="2020-02-20T17:58:21Z" finished-at="2020-02-20T17:58:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Limerick Strand Hotel should be Listed in webside with sauna filter, where true is: Listed and false is: Not listed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Limerick Strand Hotel should be Listed in webside with sauna filter, where true is: Listed and false is: Not listed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.kneat.pages.PageValidation.Validation(PageValidation.java:31)
at com.kneat.test.Tests.SaunaLimerickStrandHotelListed(Tests.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaunaLimerickStrandHotelListed -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="tearDown" is-config="true" duration-ms="1178" started-at="2020-02-20T17:58:48Z" finished-at="2020-02-20T17:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="setUp" is-config="true" duration-ms="7190" started-at="2020-02-20T17:58:49Z" finished-at="2020-02-20T17:58:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="SaunaGeorgeLimerickHotelNotListed()[pri:2, instance:com.kneat.test.Tests@6bf256fa]" name="SaunaGeorgeLimerickHotelNotListed" duration-ms="26443" started-at="2020-02-20T17:58:56Z" finished-at="2020-02-20T17:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaunaGeorgeLimerickHotelNotListed -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="tearDown" is-config="true" duration-ms="1168" started-at="2020-02-20T17:59:22Z" finished-at="2020-02-20T17:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="setUp" is-config="true" duration-ms="7470" started-at="2020-02-20T17:59:23Z" finished-at="2020-02-20T17:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="FiveStarsTheSavoryHotelListed()[pri:3, instance:com.kneat.test.Tests@6bf256fa]" name="FiveStarsTheSavoryHotelListed" duration-ms="6557" started-at="2020-02-20T17:59:31Z" finished-at="2020-02-20T17:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FiveStarsTheSavoryHotelListed -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="tearDown" is-config="true" duration-ms="1286" started-at="2020-02-20T17:59:38Z" finished-at="2020-02-20T17:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="setUp" is-config="true" duration-ms="6273" started-at="2020-02-20T17:59:39Z" finished-at="2020-02-20T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="FiveStarsGeorgeLimerickHotelNotListed()[pri:4, instance:com.kneat.test.Tests@6bf256fa]" name="FiveStarsGeorgeLimerickHotelNotListed" duration-ms="26771" started-at="2020-02-20T17:59:45Z" finished-at="2020-02-20T18:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FiveStarsGeorgeLimerickHotelNotListed -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.kneat.test.Tests@6bf256fa]" name="tearDown" is-config="true" duration-ms="1156" started-at="2020-02-20T18:00:12Z" finished-at="2020-02-20T18:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.kneat.test.Tests -->
    </test> <!-- Command line test -->
  </suite> <!-- com.kneat.test.Tests -->
</testng-results>
